{"version":3,"sources":["components/Button.js","components/Input.js","components/ClearButton.js","App.js","index.js"],"names":["Button","isOperator","val","isNaN","className","this","props","children","onClick","handleClick","React","Component","Input","ClearButton","handleClear","App","addToInput","setState","input","state","addDecimal","indexOf","addZeroToInput","clearInput","add","previousNumber","operator","subtract","multiply","divide","evaluate","currentNumber","parseInt","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.07464e80.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Button.css\";\n\nclass Button extends React.Component {\n    isOperator = val => {\n        return !isNaN(val) || val === \".\" || val === \"=\";\n    };\n\n    render() {\n        return (\n            <div\n                className={`button ${\n                    this.isOperator(this.props.children) ? \"\" : \"operator\"\n                    }`}\n                onClick={() => this.props.handleClick(this.props.children)}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Button;","import React from \"react\";\nimport \"./Input.css\";\n\nclass Input extends React.Component {\n    render() {\n        return <div className=\"input\">{this.props.children}</div>;\n    }\n}\n\nexport default Input;","import React from \"react\";\nimport \"./ClearButton.css\";\n\nclass ClearButton extends React.Component {\n    render() {\n        return (\n            <div className=\"clear-btn\" onClick={() => this.props.handleClear()}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default ClearButton;","import React from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\"\n    };\n  }\n\n  addToInput = val => {\n    this.setState({ input: this.state.input + val });\n  };\n\n  addDecimal = val => {\n    // only add deciaml if there is no current decimal present in the input area\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ input: this.state.input + val });\n    }\n  };\n\n  addZeroToInput = val => {\n    // if this.state.input is not empty then add 0\n    if (this.state.input !== \"\") {\n      this.setState({ input: this.state.input + val });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ input: \"\" });\n  };\n\n  add = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"plus\";\n  };\n\n  subtract = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"subtract\";\n  };\n\n  multiply = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"multiply\";\n  };\n\n  divide = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"divide\";\n  };\n\n  evaluate = () => {\n    this.state.currentNumber = this.state.input;\n\n    if (this.state.operator == \"plus\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) +\n          parseInt(this.state.currentNumber)\n      });\n    } else if (this.state.operator == \"subtract\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) -\n          parseInt(this.state.currentNumber)\n      });\n    } else if (this.state.operator == \"multiply\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) *\n          parseInt(this.state.currentNumber)\n      });\n    } else if (this.state.operator == \"divide\") {\n      this.setState({\n        input:\n          parseInt(this.state.previousNumber) /\n          parseInt(this.state.currentNumber)\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.evaluate}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}